#!/usr/bin/env bash

set -e

# --- Configuration --- #
REPO_URL="https://github.com/vivindeena/config.git"
CONFIG_DIR="$HOME/.config"

# --- Helper Functions --- #
log() {
    if [[ $dry == "1" ]]; then
        echo "[DRY_RUN]: $@"
    else
        echo "$@"
    fi
}

execute() {
    if [[ $dry == "1" ]]; then
        log "will run: $@"
    else
        log "running: $@"
        "$@"
    fi
}

print_help() {
    echo "Usage: ./run [options] [filter]"
    echo ""
    echo "Options:"
    echo "  -h, --help      Show this help message."
    echo "  -d, --dry       Perform a dry run without executing any scripts. Alias: --dry-run"
    echo ""
    echo "Filter:"
    echo "  A string to filter the scripts to be run. Only scripts whose path contains the filter string will be executed."
    echo ""
    echo "Example:"
    echo "  ./run -d btop   # Perform a dry run of scripts containing 'btop' in their name."
}

# --- Remote Execution --- #
if [ ! -d "$CONFIG_DIR/.git" ]; then
    echo "Cloning dotfiles repository..."
    git clone "$REPO_URL" "$CONFIG_DIR"
    cd "$CONFIG_DIR"
    echo "Running setup..."
    ./run
    exit 0
fi

# --- Main Logic --- #
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
filter=""
dry="0"

cd "$script_dir"

while [[ $# -gt 0 ]]; do
    case "$1" in
        -h|--help)
            print_help
            exit 0
            ;;
        -d|--dry|--dry-run)
            dry="1"
            shift # past argument
            ;;
        *)    # unknown option
            if [[ -z "$filter" ]]; then # Only take the first non-option as filter
                filter="$1"
            fi
            shift # past argument
            ;;
    esac
done

scripts=$(find runs -maxdepth 1 -mindepth 1 -perm +111 -type f)

if [[ -n "$filter" ]] || [[ "$dry" != "1" ]]; then
    log "run: filter=$filter"
fi

for script in $scripts; do
    if [[ -n "$filter" ]] && ! echo "$script" | grep -q "$filter"; then
        continue
    fi
    execute "./$script"
done

